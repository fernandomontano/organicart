<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>